# uncomment the following to force 32-bit compilation
# FORCE_M32=-m32

ifneq ($(shell sw_vers -productVersion | egrep '10\.[678](\.[0-9]+)?'),)
SDK=$(shell xcodebuild -sdk macosx -version | grep '^Path:' | sed 's/Path: \(.*\)/\1/')
ISYSROOT=-isysroot $(SDK)
LINK_EXTRAS=-F/System/Library/PrivateFrameworks \
    -weak_framework MultitouchSupport
else
ISYSROOT=-isysroot /Developer/SDKs/MacOSX10.4u.sdk
LINK_EXTRAS=
endif

ifneq ($(shell gcc --version | head -1 | awk -F" " '{ printf $3 }' | grep '4\.[1-9]'),)
# force clang if gcc 4.2 is present (for OS X 10.4 compatibility)
CC=clang
CXX=clang++
LD=clang++
endif

# compiled-in clang+llvm
CLANG_DIR=clang+llvm
CFLAGS_CLANG=-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS -I$(CLANG_DIR)/include
LDFLAGS_CLANG=-L$(CLANG_DIR)/lib \
-lclangAnalysis -lclangAST -lclangBasic -lclangCodeGen -lclangDriver -lclangEdit -lclangFrontend -lclangLex -lclangParse -lclangRewriteCore -lclangRewriteFrontend -lclangSema -lclangSerialization -lclangTooling \
-lLLVMAnalysis -lLLVMArchive -lLLVMAsmParser -lLLVMAsmPrinter -lLLVMBitReader -lLLVMBitWriter -lLLVMCodeGen -lLLVMCore -lLLVMExecutionEngine -lLLVMInstCombine -lLLVMInstrumentation -lLLVMInterpreter -lLLVMJIT -lLLVMLinker -lLLVMMC -lLLVMMCParser -lLLVMScalarOpts -lLLVMSelectionDAG -lLLVMSupport -lLLVMTarget -lLLVMTransformUtils -lLLVMVectorize -lLLVMX86AsmParser -lLLVMX86AsmPrinter -lLLVMX86CodeGen -lLLVMX86Desc -lLLVMX86Info -lLLVMX86Utils -lLLVMipa -lLLVMipo -lLLVMRuntimeDyld -lLLVMObject 

CFLAGS+= -D__MACOSX_CORE__ $(FORCE_M32) $(ISYSROOT)
CFLAGSDEPEND+= -D__MACOSX_CORE__ $(FORCE_M32) $(ISYSROOT)

FRAMEWORKS+= CoreAudio CoreMIDI CoreFoundation IOKit Carbon AppKit Foundation
LDFLAGS+= $(FORCE_M32) $(ISYSROOT) $(addprefix -framework ,$(FRAMEWORKS)) \
    $(LINK_EXTRAS) -lstdc++ -lm 

CSRCS+= util_sndfile.c


# this is to link properly on leopard...
MACOSX_DEPLOYMENT_TARGET=10.4
export MACOSX_DEPLOYMENT_TARGET
# option 2, add this to the gcc flags: -mmacosx-version-min=10.4

#-----------------------------------------------------------------------------
# by default, ChucK uses a pre-configured libsndfile...
# uncomment the next 3 lines to use libsndfile on your system
#-----------------------------------------------------------------------------
#FLAGS+= -D__CK_SNDFILE_NATIVE__
#LIBS+= -lsndfile
#SF_OBJ=

